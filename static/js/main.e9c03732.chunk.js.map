{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","containers/Layout/Layout.module.css","Assets/Images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/SideDrawerToggler/SideDrawerToggler.module.css","components/UI/BackDrop/BackDrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckOutSummary/CheckOutSummary.module.css","containers/CheckOut/ContactData/ContactData.module.css","store/reducer.js","store/action.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/SideDrawerToggler/SideDrawerToggler.js","components/Navigation/Toolbar/Toolbar.js","components/UI/BackDrop/BackDrop.js","components/Navigation/SideDrawer/SideDrawer.js","containers/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axiosOrder.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckOutSummary/CheckOutSummary.js","components/UI/Input/Input.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/CheckOut.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","ingredient","salad","bacon","meat","cheese","burgerPrice","INGREDIENT_PRICE","reducer","state","action","type","ingredientName","logo","className","classes","Logo","src","logoImage","alt","navigationItem","props","NavigationItem","to","link","active","children","navigationItems","NavigationItems","sideDrawerToggler","DrawerToggle","onClick","clicked","toolbar","Toolbar","SideDrawerToggler","showSideDrawer","DesktopOnly","backDrop","purchasing","Backdrop","sideDrawer","attachClasses","SideDrawer","Close","show","console","log","Open","Fragment","BackDrop","closedSideDrawer","join","Layout","hideSideDrawer","hideSideDrawerHandler","setState","showSideDrawerHandler","prevState","this","Content","Component","burgerIngredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformIngredient","Object","keys","map","igKey","Array","_","i","BurgerIngredient","key","reduce","arr","el","concat","length","Burger","buildConrol","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","toFixed","ctrl","priceAdded","priceRemoved","disabledInfo","OrderButton","purchasable","showModalHandle","modal","modalClosed","Modal","style","transform","opacity","button","Button","btnType","orderSumary","ingredientSummary","textTransform","purchaseCancel","purchaseContinue","instace","axios","create","baseURL","spinner","Loading","withErrorHandler","WrapperComponent","error","errorConfirmHandler","reqInterceptor","interceptors","request","use","resInterceptor","response","res","err","eject","message","BurgerBulder","loading","getIngredient","get","then","data","catch","purchasableHandle","sum","showModal","purchaseCancelHandle","purchaseContinueHandle","history","push","orderSubmited","isOrder","Spinner","textAlign","ings","onIngredientAdded","onIngredientRemoved","price","OrderSummary","connect","dispatch","ingName","checkOutSummary","CheckOutSummary","width","margin","checkOutCancel","checkOutContinue","input","inputElement","inputElementArray","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minlenght","maxlenght","country","email","deliveryMethod","formIsValid","orderHandler","e","preventDefault","formData","elementIdentifier","order","orderData","post","checkValidity","rules","isValid","trim","formHandleChange","event","updatedForm","updatedFormElement","target","orderFormArray","hasOwnProperty","id","config","onSubmit","formElement","CheckOut","checkOutCancelHandler","goBack","checkOutContinueHandler","replace","match","path","component","ingredientArray","amount","ingredientOutput","Order","parseInt","orders","getOrders","obj","odr","orderId","App","Orders","Boolean","window","location","hostname","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,mBCAxUD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,MAAQ,0BAA0B,KAAO,2B,iBCAvID,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,gBCAjJD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,yB,mBCAjID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,kBCAhGD,EAAOC,QAAU,CAAC,eAAiB,yC,kBCAnCD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,gBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,gBCA7FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,2BCAtDD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,QAAU,0B,gBCD9DD,EAAOC,QAAU,IAA0B,kC,gBCC3CD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,iBCApCD,EAAOC,QAAU,CAAC,aAAe,0C,gBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,iBCA1BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,gBAAkB,2C,gBCApCD,EAAOC,QAAU,CAAC,YAAc,mC,guBCAhC,IAAMC,EAAa,CACfC,WAAY,CACRC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,OAAO,GAEXC,YAAa,GAEXC,EAAmB,CACrBL,MAAO,GACPC,MAAO,GACPE,OAAQ,IACRD,KAAM,IA0BKI,EAxBD,WAA8B,IAA7BC,EAA4B,uDAAtBT,EAAaU,EAAS,uCACvC,OAAOA,EAAOC,MACV,IClBoB,iBDmBhB,OAAO,EAAP,GACOF,EADP,CAEIR,WAAW,EAAD,GACHQ,EAAMR,WADH,eAELS,EAAOE,eAAgBH,EAAMR,WAAWS,EAAOE,gBAAgB,IAEpEN,YAAYG,EAAMH,YAAaC,EAAiBG,EAAOE,kBAE/D,IC1BuB,oBD2Bf,OAAO,EAAP,GACOH,EADP,CAEIR,WAAW,EAAD,GACHQ,EAAMR,WADH,eAELS,EAAOE,eAAgBH,EAAMR,WAAWS,EAAOE,gBAAgB,IAEpEN,YAAYG,EAAMH,YAAaC,EAAiBG,EAAOE,kBAE/D,QAAQ,OAAOH,I,uHEzBZI,EAPJ,WACP,OACI,yBAAKC,UAAWC,IAAQC,MACpB,yBAAKC,IAAKC,IAAWC,IAAI,W,0CCKtBC,EATO,SAACC,GACnB,OACG,wBAAIP,UAAWC,IAAQO,gBACnB,kBAAC,IAAD,CAASC,GAAIF,EAAMG,KAAMV,UAAWO,EAAMI,OAAOV,IAAQU,OAAO,MAC1DJ,EAAMK,YCKPC,EARM,WAClB,OACE,wBAAIb,UAAWC,IAAQa,iBACjB,kBAACN,EAAD,CAAgBE,KAAK,IAAIC,QAAM,GAA/B,mBACA,kBAACH,EAAD,CAAgBE,KAAK,WAArB,a,iBCGGK,EATU,SAACR,GACtB,OACI,yBAAKP,UAAWC,IAAQe,aAAcC,QAASV,EAAMW,SACjD,8BACA,8BACA,gCCWGC,EAbD,SAACZ,GACX,OACI,4BAAQP,UAAWC,IAAQmB,SACvB,kBAACC,EAAD,CAAmBH,QAASX,EAAMe,iBAClC,yBAAKtB,UAAWC,IAAQC,MACxB,kBAACA,EAAD,OAEA,yBAAKF,UAAWC,IAAQsB,aACxB,kBAACT,EAAD,S,kCCLGU,EALC,SAACjB,GACb,OACGA,EAAMkB,WAAW,yBAAKzB,UAAWC,IAAQyB,SAAUT,QAASV,EAAMW,UAAgB,MCuB1ES,EAtBE,SAACpB,GAEd,IAAIqB,EAAc,CAAC3B,IAAQ4B,WAAW5B,IAAQ6B,OAM9C,OALGvB,EAAMwB,OACLC,QAAQC,IAAI1B,EAAMwB,MAElBH,EAAc,CAAC3B,IAAQ4B,WAAW5B,IAAQiC,OAG1C,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAD,CAAUX,WAAYlB,EAAMwB,KAAMb,QAASX,EAAM8B,mBACrD,yBAAKrC,UAAW4B,EAAcU,KAAK,MAChC,yBAAKtC,UAAWC,IAAQC,MACxB,kBAACA,EAAD,OAEC,6BACI,kBAACY,EAAD,UCeDyB,E,2MA/BX5C,MAAM,CACF6C,gBAAe,G,EAEnBC,sBAAsB,WAClB,EAAKC,SAAS,CAACF,gBAAe,K,EAElCG,sBAAsB,WAClB,EAAKD,UAAS,SAAAE,GACV,MAAO,CAACJ,gBAAgBI,EAAUJ,oB,wEAItC,OACI,kBAAC,IAAML,SAAP,KACG,kBAACf,EAAD,CACKW,KAAMc,KAAKlD,MAAM6C,eAClBlB,eAAgBuB,KAAKF,wBAEzB,kBAACd,EAAD,CACKE,KAAMc,KAAKlD,MAAM6C,eACjBH,iBAAkBQ,KAAKJ,wBAE3B,0BAAMzC,UAAWC,IAAQ6C,SACpBD,KAAKtC,MAAMK,e,GAxBVmC,a,0CCiCPC,EAhCQ,SAACzC,GACpB,IAAIpB,EAAW,KACf,OAAOoB,EAAMV,MACT,IAAM,eACNV,EAAW,yBAAKa,UAAWC,IAAQgD,cACnC,MACA,IAAM,YACE9D,EAAY,yBAAKa,UAAWC,IAAQiD,UAChC,yBAAKlD,UAAWC,IAAQkD,SACxB,yBAAKnD,UAAWC,IAAQmD,UAE5B,MACR,IAAK,OACLjE,EAAW,yBAAKa,UAAWC,IAAQoD,OACnC,MACA,IAAK,SACLlE,EAAW,yBAAKa,UAAWC,IAAQqD,SACnC,MACA,IAAK,QACLnE,EAAW,yBAAKa,UAAWC,IAAQsD,QACnC,MACA,IAAK,QACLpE,EAAW,yBAAKa,UAAWC,IAAQuD,QACnC,MACA,QAAQrE,EAAW,KAEvB,OAAOA,GCHIsE,EAzBA,SAAClD,GACZ,IAAImD,EAAsBC,OAAOC,KAAKrD,EAAMpB,YACvC0E,KAAI,SAAAC,GACD,OAAO,YAAIC,MAAMxD,EAAMpB,WAAW2E,KAASD,KAAI,SAACG,EAAGC,GAC/C,OAAO,kBAACC,EAAD,CAAkBC,IAAKL,EAAQG,EAAGpE,KAAMiE,UAEpDM,QAAO,SAACC,EAAIC,GACX,OAAOD,EAAIE,OAAOD,KACpB,IAIN,OAHgC,IAA7BZ,EAAoBc,SACnBd,EAAoB,2DAGpB,yBAAK1D,UAAWC,IAAQwE,QACpB,kBAACP,EAAD,CAAkBrE,KAAK,cACtB6D,EACD,kBAACQ,EAAD,CAAkBrE,KAAK,mB,wCCDpB6E,GAhBG,SAACnE,GACf,OACI,yBAAKP,UAAWC,KAAQ0E,cACpB,yBAAK3E,UAAWC,KAAQ2E,OAAQrE,EAAMsE,OACtC,4BAAQ7E,UAAWC,KAAQ6E,KAAM7D,QAASV,EAAMwE,QAASC,SAAUzE,EAAMyE,UAAzE,QACA,4BAAQhF,UAAWC,KAAQgF,KAAMhE,QAASV,EAAM2E,OAAhD,UCJNC,GAAS,CACX,CAACN,MAAM,QAAQhF,KAAK,SACpB,CAACgF,MAAM,QAAQhF,KAAK,SACpB,CAACgF,MAAM,SAAShF,KAAK,UACrB,CAACgF,MAAM,OAAOhF,KAAK,SA0BRuF,GAxBK,SAAC7E,GAEjB,OACI,yBAAKP,UAAWC,KAAQoF,eACrB,gDAAqB,gCAAS9E,EAAMf,YAAY8F,QAAQ,KACvDH,GAAStB,KAAI,SAAA0B,GAAI,OAAG,kBAACZ,GAAD,CACrBR,IAAKoB,EAAKV,MACTA,MAAOU,EAAKV,MACZK,MAAO,kBAAI3E,EAAMiF,WAAWD,EAAK1F,OACjCkF,QAAS,kBAAIxE,EAAMkF,aAAaF,EAAK1F,OACrCmF,SAAUzE,EAAMmF,aAAaH,EAAK1F,WAElC,4BAAQG,UAAWC,KAAQ0F,YAC1BX,UAAWzE,EAAMqF,YACjB3E,QAASV,EAAMsF,iBAFhB,e,oBCEGC,GAnBH,SAACvF,GACT,OACI,kBAAC,IAAM4B,SAAP,KACA,kBAAC,EAAD,CAAUV,WAAYlB,EAAMkB,WAAYP,QAASX,EAAMwF,cACvD,yBACI/F,UAAWC,KAAQ+F,MACnBC,MAAO,CAACC,UAAU3F,EAAMkB,WAAW,gBAAgB,qBACnD0E,QAAQ5F,EAAMkB,WAAW,IAAI,MAE5BlB,EAAMK,Y,oBCHJwF,GATF,SAAC7F,GACV,OACI,4BACAyE,SAAUzE,EAAMyE,SAChBhF,UAAW,CAACC,KAAQoG,OAAOpG,KAAQM,EAAM+F,UAAUhE,KAAK,KACxDrB,QAASV,EAAMW,SACbX,EAAMK,WCsBD2F,GA1BG,SAAChG,GACnB,IAAIiG,EAAkB7C,OAAOC,KAAKrD,EAAMpB,YAAY0E,KAAI,SAACC,EAAMG,GAC3D,OACI,wBAAIE,IAAKL,EAAMG,GACX,0BAAMgC,MAAO,CAACQ,cAAc,eAAgB3C,EAA5C,KAA2DvD,EAAMpB,WAAW2E,OAGpF,OACI,kBAAC,IAAM3B,SAAP,KACI,0CACA,iFACA,4BACKqE,GAEL,2BAAG,+CAAqBjG,EAAMf,YAAY8F,QAAQ,KAClD,oDACA,kBAACe,GAAD,CAAQC,QAAQ,SAASpF,QAASX,EAAMmG,gBAAxC,UACA,kBAACL,GAAD,CAAQC,QAAQ,UAAUpF,QAASX,EAAMoG,kBAAzC,c,SChBGC,G,QAJAC,EAAMC,OAAO,CACxBC,QAAQ,qD,oBCCGC,GADA,kBAAM,yBAAKhH,UAAWC,KAAQgH,SAAxB,eCqCNC,GArCU,SAACC,EAAkBN,GACxC,kNACIlH,MAAQ,CACJyH,MAAO,MAFf,EAkBIC,oBAAsB,WAClB,EAAK3E,SAAS,CAAE0E,MAAO,QAnB/B,oFAI0B,IAAD,OACnBvE,KAAKyE,eAAeT,EAAMU,aAAaC,QAAQC,KAAI,SAAAD,GAE7C,OADA,EAAK9E,SAAS,CAAE0E,MAAO,OAChBI,KAEX3E,KAAK6E,eAAeb,EAAMU,aAAaI,SAASF,KAAI,SAAAG,GAAG,OAAIA,KAAK,SAAAC,GAC5D,EAAKnF,SAAS,CAAE0E,MAAOS,SAVnC,6CAeQhB,EAAMU,aAAaC,QAAQM,MAAMjF,KAAKyE,gBACtCT,EAAMU,aAAaI,SAASG,MAAMjF,KAAK6E,kBAhB/C,+BAsBQ,OACI,kBAAC,IAAMvF,SAAP,KACI,kBAAC6D,GAAD,CACIvE,WAAYoB,KAAKlD,MAAMyH,MACvBrB,YAAalD,KAAKwE,qBACjBxE,KAAKlD,MAAMyH,MAAQvE,KAAKlD,MAAMyH,MAAMW,QAAU,MAEnD,kBAACZ,EAAqBtE,KAAKtC,YA7B3C,GAAqBwC,c,mOCSnBiF,G,2MACFrI,MAAQ,CACJ8B,YAAY,EACZwG,SAAS,EACTb,OAAM,G,EAKVc,cAAgB,WACZrB,GAAMsB,IAAI,oBACLC,MAAK,SAAAT,GACF,EAAKjF,SAAS,CAAEvD,WAAYwI,EAASU,UAExCC,OAAM,SAAAT,GACH,EAAKnF,SAAS,CAAC0E,OAAM,Q,EAGjCmB,kBAAoB,SAACpJ,GAOjB,OALUwE,OAAOC,KAAKzE,GAAY0E,KAAI,SAAAD,GAClC,OAAOzE,EAAWyE,MACnBQ,QAAO,SAACoE,EAAKlE,GACZ,OAAOkE,EAAMlE,IACd,GACW,G,EAGlBmE,UAAY,WAER,EAAK/F,SAAS,CAAEjB,YAAY,K,EAGhCiH,qBAAuB,WAEnB,EAAKhG,SAAS,CAAEjB,YAAY,K,EAEhCkH,uBAAyB,WACrB,EAAKpI,MAAMqI,QAAQC,KAAK,c,EAE5BC,cAAc,WACV,EAAKpG,SAAS,CAACqG,SAAQ,K,qHAGvB,IAAIxC,EAAc,kBAACyC,GAAD,MACdvF,EAASZ,KAAKlD,MAAMyH,MAAM,uBAAGnB,MAAO,CAACgD,UAAU,WAArB,4BAA6D,kBAACD,GAAD,MAC3F,GAAInG,KAAKtC,MAAM2I,KAAM,CACjB,IAAIxD,E,2VAAY,IAAQ7C,KAAKtC,MAAM2I,MACnC,IAAK,IAAI/E,KAAOuB,EACZA,EAAavB,GAAOuB,EAAavB,IAAQ,EAE7CV,EAAU,kBAAC,IAAMtB,SAAP,KACN,kBAACsC,EAAD,CAAQtF,WAAY0D,KAAKtC,MAAM2I,OAC/B,kBAAC7D,GAAD,CACIG,WAAY3C,KAAKtC,MAAM4I,kBACvB1D,aAAc5C,KAAKtC,MAAM6I,oBACzB1D,aAAcA,EACdlG,YAAaqD,KAAKtC,MAAM8I,MACxBzD,YAAa/C,KAAK0F,kBAAkB1F,KAAKtC,MAAM2I,MAC/CrD,gBAAiBhD,KAAK4F,aAG9BlC,EAAc,kBAAC+C,GAAD,CACVnK,WAAY0D,KAAKtC,MAAM2I,KACvBvC,iBAAkB9D,KAAK8F,uBACvBjC,eAAgB7D,KAAK6F,qBACrBlJ,YAAaqD,KAAKtC,MAAM8I,QAExBxG,KAAKlD,MAAMsI,UACX1B,EAAc,kBAACyC,GAAD,OAGtB,OAAQ,kBAAC,IAAM7G,SAAP,KACJ,kBAAC6D,GAAD,CAAOvE,WAAYoB,KAAKlD,MAAM8B,WAAYsE,YAAalD,KAAK6F,sBACvDnC,GAEJ9C,O,GA5EcV,aA6FZwG,gBAZO,SAAA5J,GACnB,MAAM,CACLuJ,KAAKvJ,EAAMR,WACXkK,MAAM1J,EAAMH,gBAGS,SAAAgK,GACtB,MAAM,CACLL,kBAAkB,SAACM,GAAD,OAAWD,EAAS,CAAC3J,KnBrGf,iBmBqG+CC,eAAe2J,KACtFL,oBAAoB,SAACK,GAAD,OAAWD,EAAS,CAAC3J,KnBrGd,oBmBqGiDC,eAAe2J,QAGhFF,CAA4CrC,GAAiBc,GAAcnB,K,oBCnF3E6C,GAlBQ,SAACnJ,GACpB,OACI,yBAAKP,UAAWC,KAAQ0J,iBACpB,uDACA,yBAAK1D,MAAO,CAAC2D,MAAM,OAAOC,OAAO,SAC7B,kBAACpF,EAAD,CAAQtF,WAAYoB,EAAMpB,cAE9B,kBAACkH,GAAD,CACIC,QAAQ,SACRpF,QAASX,EAAMuJ,gBAFnB,UAIA,kBAACzD,GAAD,CACIC,QAAQ,UACRpF,QAASX,EAAMwJ,kBAFnB,e,wCC8CGC,GA1DD,SAAAzJ,GACZ,IAAI0J,EAAe,KACfC,EAAkB,CAACjK,KAAQkK,cAI/B,OAHG5J,EAAM6J,SAAW7J,EAAM8J,gBAAkB9J,EAAM+J,SAChDJ,EAAkBrB,KAAK5I,KAAQsK,SAEzBhK,EAAMiK,aACZ,IAAK,QACHP,EACE,yCACEjK,UAAWkK,EAAkB5H,KAAK,MAC9B/B,EAAMkK,cAFZ,CAGEC,MAAOnK,EAAMmK,MACbC,SAAUpK,EAAMqK,WAGpB,MACF,IAAK,WACHX,EACE,4CACEjK,UAAWkK,EAAkB5H,KAAK,MAC9B/B,EAAMkK,cAFZ,CAGEC,MAAOnK,EAAMmK,MACbC,SAAUpK,EAAMqK,WAGpB,MACF,IAAK,SACHX,EACE,4BACEjK,UAAWkK,EAAkB5H,KAAK,KAClCoI,MAAOnK,EAAMmK,MACbC,SAAUpK,EAAMqK,SAEfrK,EAAMkK,cAAcI,QAAQhH,KAAI,SAAAiH,GAAM,OACrC,4BAAQ3G,IAAK2G,EAAOJ,MAAOA,MAAOI,EAAOJ,OACtCI,EAAOC,kBAKhB,MACF,QACEd,EACE,yCACEjK,UAAWkK,EAAkB5H,KAAK,MAC9B/B,EAAMkK,cAFZ,CAGEC,MAAOnK,EAAMmK,SAIrB,OACE,yBAAK1K,UAAWC,KAAQ+K,OACtB,2BAAOhL,UAAWC,KAAQ2E,OAAQrE,EAAMsE,OACvCoF,I,ikBCjDDgB,G,2MACFtL,MAAQ,CACJuL,UAAU,CACNC,KAAK,CACDX,YAAY,QACZC,cAAc,CACV5K,KAAK,OACLuL,YAAY,aAEhBV,MAAM,GACNW,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNjB,SAAQ,GAGZkB,OAAO,CACHhB,YAAY,QACZC,cAAc,CACV5K,KAAK,OACLuL,YAAY,eAEhBV,MAAM,GACNW,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNjB,SAAQ,GAEZmB,QAAQ,CACJjB,YAAY,QACZC,cAAc,CACV5K,KAAK,OACLuL,YAAY,iBAEhBV,MAAM,GACNW,WAAW,CACPC,UAAS,EACTI,UAAU,EACVC,UAAU,GAEdJ,OAAM,EACNjB,SAAQ,GAEZsB,QAAQ,CACJpB,YAAY,QACZC,cAAc,CACV5K,KAAK,OACLuL,YAAY,gBAEhBV,MAAM,GACNW,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNjB,SAAQ,GAEZuB,MAAM,CACFrB,YAAY,QACZC,cAAc,CACV5K,KAAK,QACLuL,YAAY,eAEhBV,MAAM,GACNW,WAAW,CACPC,UAAS,GAEbC,OAAM,EACNjB,SAAQ,GAEZwB,eAAe,CACXtB,YAAY,SACZC,cAAc,CACXI,QAAQ,CACH,CAACH,MAAM,UAAUK,aAAa,WAC9B,CAACL,MAAM,WAAWK,aAAa,cAGvCL,MAAM,UACNW,WAAW,GAGXE,OAAM,EACNjB,SAAQ,IAGhBrC,SAAS,EACT8D,aAAY,G,EAEhBC,aAAe,SAACC,GACZA,EAAEC,iBACF,EAAKxJ,SAAS,CAAEuF,SAAS,IACzB,IAAIkE,EAAS,GACT,IAAK,IAAMC,KAAqB,EAAKzM,MAAMuL,UACvCiB,EAASC,GAAmB,EAAKzM,MAAMuL,UAAUkB,GAAmB1B,MAE5E,IAAM2B,EAAQ,CACVlN,WAAY,EAAKoB,MAAM2I,KACvBG,MAAO,EAAK9I,MAAM8I,MAClBiD,UAAUH,GAIdtF,GAAM0F,KAAK,eAAgBF,GACtBjE,MAAK,SAAAT,GACF,EAAKjF,SAAS,CAAEuF,SAAS,IACzB,EAAK1H,MAAMqI,QAAQC,KAAK,QAE3BP,OAAM,SAAAlB,GACH,EAAK1E,SAAS,CAAEuF,SAAS,Q,EAIrCuE,cAAc,SAAC9B,EAAM+B,GACjB,IAAKC,GAAQ,EAWb,OAVGD,EAAMnB,WACLoB,EAAyB,KAAjBhC,EAAMiC,QAAiBD,GAGhCD,EAAMf,YACLgB,EAAQhC,EAAMlG,QAAUiI,EAAMf,WAAagB,GAE5CD,EAAMd,YACLe,EAAQhC,EAAMlG,QAAUiI,EAAMd,WAAae,GAExCA,G,EAEXE,iBAAiB,SAACC,EAAMT,GACpB,IAAIU,EAAY,MACV,EAAKnN,MAAMuL,WAEb6B,EAAmB,MAChBD,EAAYV,IAEnBW,EAAmBrC,MAAMmC,EAAMG,OAAOtC,MACtCqC,EAAmBzC,SAAQ,EAC3ByC,EAAmBxB,MAAM,EAAKiB,cAAcO,EAAmBrC,MAAMqC,EAAmB1B,YACxFyB,EAAYV,GAAmBW,EAC/B,IAAKhB,GAAY,EACjB,IAAK,IAAMK,KAAqBU,EAC5Bf,EAAYe,EAAYV,GAAmBb,OAASQ,EAGxD,EAAKrJ,SAAS,CAACwI,UAAU4B,EAAYf,YAAYA,K,wEAG3C,IAAD,OACCkB,EAAe,GACrB,IAAK,IAAM9I,KAAOtB,KAAKlD,MAAMuL,UACrBrI,KAAKlD,MAAMuL,UAAUgC,eAAe/I,IACrC8I,EAAepE,KAAK,CAACsE,GAAGhJ,EAAIiJ,OAAOvK,KAAKlD,MAAMuL,UAAU/G,KAI/D,OACI,yBAAKnE,UAAWC,KAAQgL,aACpB,uDAEIpI,KAAKlD,MAAMsI,QAAU,kBAACe,GAAD,MACf,0BAAOqE,SAAUxK,KAAKmJ,cACtBiB,EAAepJ,KAAI,SAAAyJ,GAAW,OACxB,kBAACtC,GAAD,CACA7G,IAAKmJ,EAAYH,GACjB3C,YAAa8C,EAAYF,OAAO5C,YAChCC,cAAe6C,EAAYF,OAAO3C,cAClCC,MAAO4C,EAAYF,OAAO1C,MAC1BE,QAAS,SAACiC,GAAD,OAAS,EAAKD,iBAAiBC,EAAMS,EAAYH,KAC1D/C,SAAUkD,EAAYF,OAAO7B,MAC7BlB,eAAgBiD,EAAYF,OAAO/B,WACnCf,QAASgD,EAAYF,OAAO9C,aAGhC,kBAACjE,GAAD,CAAQrB,UAAWnC,KAAKlD,MAAMoM,YAAazF,QAAQ,WAAnD,e,GA7KFvD,aA4LXwG,gBANO,SAAA5J,GAClB,MAAM,CACFuJ,KAAKvJ,EAAMR,WACXkK,MAAM1J,EAAMH,eAGL+J,CAAyB0B,I,SC9LjCsC,G,2MAEFC,sBAAsB,WAClB,EAAKjN,MAAMqI,QAAQ6E,U,EAEvBC,wBAAwB,SAACb,GACrBA,EAAMX,iBACP,EAAK3L,MAAMqI,QAAQ+E,QAAQ,EAAKpN,MAAMqN,MAAMC,KAAO,kB,wEAGnD,OACI,6BACI,kBAAClE,GAAD,CACIxK,WAAY0D,KAAKtC,MAAM2I,KACvBY,eAAgBjH,KAAK2K,sBACrBzD,iBAAkBlH,KAAK6K,0BAE3B,kBAAC,KAAD,CACIG,KAAMhL,KAAKtC,MAAMqN,MAAMC,KAAO,gBAC9BC,UAAW7C,U,GAnBPlI,aA+BTwG,gBALO,SAAA5J,GAClB,MAAM,CACFuJ,KAAKvJ,EAAMR,cAGJoK,CAAyBgE,I,oBCZzBlB,GAtBD,SAAC9L,GACX,IAAIwN,EAAkB,GACtB,IAAK,IAAMjO,KAAkBS,EAAMpB,WAC3BoB,EAAMpB,WAAW+N,eAAepN,IAChCiO,EAAgBlF,KAAK,CAAEsC,KAAMrL,EAAgBkO,OAAQzN,EAAMpB,WAAWW,KAI9E,IAAMmO,EAAiBF,EAAgBlK,KAAI,SAAA1E,GAAU,OAAI,0BAAMgF,IAAKhF,EAAWgM,MAAOhM,EAAWgM,KAAxC,KAAgDhM,EAAW6O,OAA3D,QACzD,OACI,wBAAIhO,UAAWC,KAAQiO,OACnB,4BACI,iDACAD,GAEJ,4BAAI,0CAAJ,QAAiCE,SAAS5N,EAAM8I,OAAO/D,QAAQ,IAC/D,yBAAKtF,UAAWC,KAAQC,MACpB,kBAACA,EAAD,S,6jBCbT,IAuCQgH,MAvCf,2MACIvH,MAAQ,CACJyO,OAAQ,GACRnG,SAAS,GAHjB,EASIoG,UAAY,WACRxH,GAAMsB,IAAI,gBACLC,MAAK,SAAAT,GACF,IAAIyG,EAAS,GACTE,EAAM3G,EAASU,KACnB,IAAK,IAAIkG,KAAOD,EAAK,CACjB,IAAIjC,EAAK,MACFiC,EAAIC,GADF,CAELC,QAASD,IAEbH,EAAOvF,KAAKwD,GAEhB,EAAK3J,SAAS,CAAE0L,OAAQA,EAAQnG,SAAS,OAE5CK,OAAM,SAAAT,GAAS,EAAKnF,SAAS,CAAEuF,SAAS,QAvBrD,mFAMQpF,KAAKwL,cANb,+BA0BQ,IAAID,EAAS,kBAACpF,GAAD,MAKb,OAHInG,KAAKlD,MAAMyO,OAAO5J,OAAS,IAC3B4J,EAASvL,KAAKlD,MAAMyO,OAAOvK,KAAI,SAAAwI,GAAK,OAAK,kBAAC6B,GAAD,CAAO/J,IAAKkI,EAAMmC,QAASrP,WAAYkN,EAAMlN,WAAYkK,OAAQgD,EAAMhD,YAGhH,6BACK+E,OAjCjB,GAA4BrL,aAuCY8D,ICtBzB4H,G,iLAfX,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAOZ,KAAK,UAAUC,UAAWY,KACjC,kBAAC,KAAD,CAAOb,KAAK,YAAYC,UAAWP,KACnC,kBAAC,KAAD,CAAOM,KAAK,IAAIC,UAAW9F,Y,GARrBjF,aCKE4L,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2DCRN,IAAMmB,GAAMC,YAAYtP,GAClBuP,GACF,kBAAC,IAAD,CAAUF,MAAOA,IACjB,kBAAC,IAAD,KACI,kBAAC,GAAD,QAMRG,IAASC,OAAOF,GAAKG,SAASC,eAAe,SD6GvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpH,MAAK,SAAAqH,GACjCA,EAAaC,kB","file":"static/js/main.e9c03732.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__15R-Z\",\"BreadTop\":\"BurgerIngredient_BreadTop__SalpP\",\"Seeds1\":\"BurgerIngredient_Seeds1__1M8OJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__3JBED\",\"Meat\":\"BurgerIngredient_Meat__3bIfF\",\"Cheese\":\"BurgerIngredient_Cheese__1-ufF\",\"Salad\":\"BurgerIngredient_Salad__1ncf2\",\"Bacon\":\"BurgerIngredient_Bacon__2zvlv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2T1rZ\",\"Open\":\"SideDrawer_Open__i_zlV\",\"Close\":\"SideDrawer_Close__35axy\",\"Logo\":\"SideDrawer_Logo__3Qd3c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__NWJaM\",\"Label\":\"BuildControl_Label__VNkRJ\",\"Less\":\"BuildControl_Less__2j47j\",\"More\":\"BuildControl_More__dLYCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__NtOoG\",\"Label\":\"Input_Label__1c4EX\",\"InputElement\":\"Input_InputElement__1Iku-\",\"Invalid\":\"Input_Invalid__3N1q2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3f161\",\"Logo\":\"Toolbar_Logo__nKUqQ\",\"DesktopOnly\":\"Toolbar_DesktopOnly__7GtS3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3JSNB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__2rjHN\",\"OrderButton\":\"BuildControls_OrderButton__1wnyN\",\"enable\":\"BuildControls_enable__3b-qE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2FDf5\",\"Success\":\"Button_Success__16N4U\",\"Danger\":\"Button_Danger__1n4WD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__2_bUj\",\"Logo\":\"Order_Logo__1pUPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2VWXe\",\"bgColor\":\"Layout_bgColor__VvJmS\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__36wbb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__m-fSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"SideDrawerToggler_DrawerToggle__2FwX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"BackDrop_Backdrop__36Ueb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3dLZ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1jotO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loading\":\"Spinner_Loading__2QF9Y\",\"load7\":\"Spinner_load7__2_lGY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckOutSummary\":\"CheckOutSummary_CheckOutSummary__3HPPA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__2oFIc\"};","import * as actionTypes from './action'\nconst initialState={\n    ingredient: {\n        salad:0,\n        bacon:0,\n        meat:0,\n        cheese:0\n    },\n    burgerPrice: 4,\n};\nconst INGREDIENT_PRICE = {\n    salad: 0.5,\n    bacon: 0.4,\n    cheese: 1.3,\n    meat: 0.7\n}\nconst reducer=(state=initialState,action)=>{\n    switch(action.type){\n        case actionTypes.ADD_INGREDIENT:\n            return {\n                ...state,\n                ingredient:{\n                    ...state.ingredient,\n                    [action.ingredientName]:state.ingredient[action.ingredientName]+1\n                },\n                burgerPrice:state.burgerPrice +INGREDIENT_PRICE[action.ingredientName]\n            }\n        case actionTypes.REMOVE_INGREDIENT:\n                return {\n                    ...state,\n                    ingredient:{\n                        ...state.ingredient,\n                        [action.ingredientName]:state.ingredient[action.ingredientName]-1\n                    },\n                    burgerPrice:state.burgerPrice -INGREDIENT_PRICE[action.ingredientName]\n                }\n            default:return state;\n    }\n}\n\nexport default reducer;","export const ADD_INGREDIENT='ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT='REMOVE_INGREDIENT';","import React from 'react';\nimport logoImage from '../../Assets/Images/logo.png'\nimport classes from './Logo.module.css'\n\nconst logo=() =>{\n    return (\n        <div className={classes.Logo}>\n            <img src={logoImage} alt=\"logo\"/>\n        </div>\n    )\n}\nexport default logo;","import React from 'react';\nimport classes from './NavigationItem.module.css';\nimport {NavLink} from 'react-router-dom';\n const navigationItem=(props)=> {\n    return (\n       <li className={classes.NavigationItem}>\n           <NavLink to={props.link} className={props.active?classes.active:null}>\n                {props.children}\n           </NavLink>\n        </li>\n    )\n}\nexport default navigationItem;\n","import React from 'react';\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems=()=> {\n    return (\n      <ul className={classes.NavigationItems}>\n            <NavigationItem link='/' active> Burger Builder</NavigationItem>\n            <NavigationItem link='/orders' > Orders</NavigationItem>\n      </ul>\n    )\n}\nexport default  navigationItems","import React from 'react';\nimport classes from './SideDrawerToggler.module.css'\n const sideDrawerToggler=(props) =>{\n    return (\n        <div className={classes.DrawerToggle} onClick={props.clicked}>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    )\n}\nexport default sideDrawerToggler;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport SideDrawerToggler from '../SideDrawer/SideDrawerToggler/SideDrawerToggler';\nconst toolbar=(props)=> {\n    return (\n        <header className={classes.Toolbar}>\n            <SideDrawerToggler clicked={props.showSideDrawer}/>\n            <div className={classes.Logo}>\n            <Logo/>\n            </div>\n            <nav className={classes.DesktopOnly}>\n            <NavigationItems/>\n            </nav>\n        </header>\n    )\n}\nexport default toolbar","import React from 'react';\nimport classes from './BackDrop.module.css'\n\n const backDrop=(props) =>{\n    return (\n       props.purchasing?<div className={classes.Backdrop} onClick={props.clicked}></div>:null\n    )\n}\nexport default backDrop;","import React from 'react';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport classes from './SideDrawer.module.css';\nimport BackDrop  from '../../UI/BackDrop/BackDrop';\n\nconst sideDrawer=(props)=> {\n\n    let attachClasses=[classes.SideDrawer,classes.Close];\n    if(props.show){\n        console.log(props.show);\n        \n        attachClasses=[classes.SideDrawer,classes.Open];\n    }\n    return (\n        <React.Fragment>\n            <BackDrop purchasing={props.show} clicked={props.closedSideDrawer} />\n        <div className={attachClasses.join(' ')}>\n           <div className={classes.Logo}>\n           <Logo/>\n           </div>\n            <nav>\n                <NavigationItems/>\n            </nav>\n        </div>\n        </React.Fragment>\n    )\n}\nexport default sideDrawer","import React ,{Component}from 'react';\nimport classes from './Layout.module.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass  Layout extends Component {\n    state={\n        hideSideDrawer:false,\n    }\n    hideSideDrawerHandler=()=>{\n        this.setState({hideSideDrawer:false});\n    }\n    showSideDrawerHandler=()=>{\n        this.setState(prevState=>{\n            return {hideSideDrawer:!prevState.hideSideDrawer}\n        });\n    }\n    render(){\n        return(\n            <React.Fragment>\n               <Toolbar\n                    show={this.state.hideSideDrawer}\n                   showSideDrawer={this.showSideDrawerHandler}\n                />\n               <SideDrawer\n                    show={this.state.hideSideDrawer} \n                    closedSideDrawer={this.hideSideDrawerHandler}\n                />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </React.Fragment>\n        )\n    }\n    \n}\n\nexport default Layout;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport classes from './BurgerIngredient.module.css';\n\n\nconst burgerIngredient=(props)=> {\n    let ingredient=null;\n    switch(props.type){\n        case ('bread-bottom'):\n        ingredient=<div className={classes.BreadBottom}></div>\n        break;\n        case ('bread-top'):\n                ingredient=(<div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                    </div>)\n                break;\n        case('meat'):\n        ingredient=<div className={classes.Meat}></div>\n        break;\n        case('cheese'):\n        ingredient=<div className={classes.Cheese}></div>\n        break;\n        case('salad'):\n        ingredient=<div className={classes.Salad}></div>\n        break;\n        case('bacon'):\n        ingredient=<div className={classes.Bacon}></div>\n        break;\n        default:ingredient=null;\n    };\n    return ingredient;\n}\n\nburgerIngredient.propTypes = {\ntype:PropTypes.string.isRequired\n}\nexport default burgerIngredient;\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\nconst burger = (props) => {\n    let transformIngredient = Object.keys(props.ingredient)\n        .map(igKey => {\n            return [...Array(props.ingredient[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />\n            })\n        }).reduce((arr,el)=>{\n            return arr.concat(el);\n        },[]);\n    if(transformIngredient.length===0){\n        transformIngredient=<p>Please add some ingredient.</p>\n    }\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type='bread-top' />\n            {transformIngredient}\n            <BurgerIngredient type='bread-bottom' />\n        </div>\n    )\n}\n\nburger.propTypes = {\n    ingredient: PropTypes.object.isRequired\n}\n\nexport default burger;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './BuildControl.module.css';\nconst buildConrol=(props)=> {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n            <button className={classes.More} onClick={props.added}>More</button>\n            \n        </div>\n    )\n}\n\nbuildConrol.propTypes = {\nlabel:PropTypes.string.isRequired,\nadded:PropTypes.func.isRequired\n}\n\nexport default buildConrol;\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classes  from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\nconst controls=[\n    {label:'Salad',type:'salad'},\n    {label:'Bacon',type:'bacon'},\n    {label:'Cheese',type:'cheese'},\n    {label:'Meat',type:'meat'},\n]\nconst buildControls=(props)=>{\n   \n    return (\n        <div className={classes.BuildControls}>\n           <p>Calculated Price: <strong>{props.burgerPrice.toFixed(2)}</strong></p> \n           {controls.map(ctrl=> <BuildControl \n           key={ctrl.label}\n            label={ctrl.label}\n            added={()=>props.priceAdded(ctrl.type)}\n            removed={()=>props.priceRemoved(ctrl.type)}\n            disabled={props.disabledInfo[ctrl.type]}\n            />)}\n            <button className={classes.OrderButton}\n             disabled={!props.purchasable}\n             onClick={props.showModalHandle}\n             >Order Now</button>\n        </div>\n    )\n}\n\nbuildControls.propTypes = {\n\n}\n\nexport default buildControls;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classes from './Modal.module.css';\nimport Backdrop from '../BackDrop/BackDrop';\n\nconst modal=(props)=> {\n    return (\n        <React.Fragment>\n        <Backdrop purchasing={props.purchasing} clicked={props.modalClosed}/>\n        <div \n            className={classes.Modal}\n            style={{transform:props.purchasing?'translateY(0)':'translateY(-100vh)',\n            opacity:props.purchasing?'1':'0'}}\n        >\n            {props.children}\n        </div>\n        </React.Fragment>\n    )\n}\n\nmodal.propTypes = {\n\n}\n\nexport default modal;\n\n","import React from 'react';\nimport classes from './Button.module.css';\nconst button=(props)=> {\n    return (\n        <button\n        disabled={props.disabled}\n        className={[classes.Button,classes[props.btnType]].join(' ')}\n        onClick={props.clicked}\n        >{props.children}</button>\n    )\n}\nexport default button","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '../../UI/Button/Button';\n\nconst orderSumary=(props) =>{\nlet ingredientSummary=Object.keys(props.ingredient).map((igKey,i)=>{\n    return (\n        <li key={igKey+i}>\n            <span style={{textTransform:'capitalize'}}>{igKey}:</span>{props.ingredient[igKey]}\n        </li>)\n})\n    return (\n        <React.Fragment>\n            <h3>Your Order</h3>\n            <p>A delicious Burger with the following ingredients:</p>\n            <ul>\n                {ingredientSummary}\n            </ul>\n            <p><strong>Total Price:{props.burgerPrice.toFixed(2)}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button btnType='Danger' clicked={props.purchaseCancel}>CANCEL</Button>\n            <Button btnType='Success' clicked={props.purchaseContinue}>CONTINUE</Button>\n        </React.Fragment>\n    )\n}\n\norderSumary.propTypes = {\n\n}\n\nexport default orderSumary\n\n","import axios from 'axios';\nconst instace =axios.create({\n    baseURL:'https://burger-builder-app-9f1f4.firebaseio.com/'\n})\n\nexport default instace;","import React from 'react'\nimport classes from './Spinner.module.css'\n const spinner=()=> (<div className={classes.Loading}>Loading...</div>);\nexport default spinner","import React, { Component } from 'react';\nimport Modal from '../../components/UI/Modal/Modal';\nconst withErrorHandler = (WrapperComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n        componentWillMount() {\n          this.reqInterceptor=axios.interceptors.request.use(request => {\n                this.setState({ error: null });\n                return request;\n            })\n            this.resInterceptor=axios.interceptors.response.use(res => res, err => {\n                this.setState({ error: err })\n\n            })\n        }\n        componentWillUnmount(){\n            axios.interceptors.request.eject(this.reqInterceptor)\n            axios.interceptors.response.eject(this.resInterceptor)\n        }\n        errorConfirmHandler = () => {\n            this.setState({ error: null });\n        }\n        render() {\n            return (\n                <React.Fragment>\n                    <Modal\n                        purchasing={this.state.error}\n                        modalClosed={this.errorConfirmHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrapperComponent {...this.props} />\n                </React.Fragment>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler;","import React, { Component } from 'react';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axiosOrder';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../store/action';\n\n\nclass BurgerBulder extends Component {\n    state = {\n        purchasing: false,\n        loading: false,\n        error:false\n    }\n    componentDidMount() {\n        // this.getIngredient()\n    }\n    getIngredient = () => {\n        axios.get('/indredient.json')\n            .then(response => {\n                this.setState({ ingredient: response.data });\n            })\n            .catch(err => {\n                this.setState({error:true})\n            });\n    }\n    purchasableHandle = (ingredient) => {\n\n        let sum = Object.keys(ingredient).map(keys => {\n            return ingredient[keys];\n        }).reduce((sum, el) => {\n            return sum + el;\n        }, 0)\n        return  sum > 0\n    }\n\n    showModal = () => {\n\n        this.setState({ purchasing: true });\n    }\n\n    purchaseCancelHandle = () => {\n\n        this.setState({ purchasing: false });\n    }\n    purchaseContinueHandle = () => {\n        this.props.history.push('/checkout');\n    }\n    orderSubmited=()=>{\n        this.setState({isOrder:false})\n    }\n    render() {\n        let orderSumary = <Spinner />\n        let burger = this.state.error?<p style={{textAlign:'center'}}>Ingredient can't be load</p>:<Spinner />\n        if (this.props.ings) {\n            let disabledInfo = { ...this.props.ings }\n            for (let key in disabledInfo) {\n                disabledInfo[key] = disabledInfo[key] <= 0\n            }\n            burger = (<React.Fragment>\n                <Burger ingredient={this.props.ings} />\n                <BuildControls\n                    priceAdded={this.props.onIngredientAdded}\n                    priceRemoved={this.props.onIngredientRemoved}\n                    disabledInfo={disabledInfo}\n                    burgerPrice={this.props.price}\n                    purchasable={this.purchasableHandle(this.props.ings)}\n                    showModalHandle={this.showModal}\n                />\n            </React.Fragment>)\n            orderSumary = <OrderSummary\n                ingredient={this.props.ings}\n                purchaseContinue={this.purchaseContinueHandle}\n                purchaseCancel={this.purchaseCancelHandle}\n                burgerPrice={this.props.price}\n            />;\n            if (this.state.loading) {\n                orderSumary = <Spinner />\n            }\n        }\n        return (<React.Fragment>\n            <Modal purchasing={this.state.purchasing} modalClosed={this.purchaseCancelHandle}>\n                {orderSumary}\n            </Modal>\n            {burger}\n        </React.Fragment>)\n    }\n}\n\nconst mapStateToProps=state=>{\n   return{\n    ings:state.ingredient,\n    price:state.burgerPrice\n   }\n}\nconst mapDispatchToProps=dispatch=>{\n   return{\n    onIngredientAdded:(ingName)=>dispatch({type:actionTypes.ADD_INGREDIENT,ingredientName:ingName}),\n    onIngredientRemoved:(ingName)=>dispatch({type:actionTypes.REMOVE_INGREDIENT,ingredientName:ingName}),\n   }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBulder, axios));","import React from 'react';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport classes from './CheckOutSummary.module.css'\nconst  checkOutSummary=(props)=>{\n    return (\n        <div className={classes.CheckOutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width:'100%',margin:'auto'}}>\n                <Burger ingredient={props.ingredient}/>\n            </div>\n            <Button \n                btnType='Danger'\n                clicked={props.checkOutCancel}\n            >CANCEL</Button>\n            <Button \n                btnType='Success'\n                clicked={props.checkOutContinue}\n            >Continue?</Button>\n        </div>\n    )\n}\nexport default checkOutSummary;","import React from \"react\";\nimport classes from \"./Input.module.css\";\n\nconst input = props => {\n  let inputElement = null;\n  let inputElementArray=[classes.InputElement];\n  if(props.invalid && props.shouldValidate && props.touched){\n    inputElementArray.push(classes.Invalid)\n  }\n  switch (props.elementType) {\n    case \"input\":\n      inputElement = (\n        <input\n          className={inputElementArray.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"textarea\":\n      inputElement = (\n        <textarea\n          className={inputElementArray.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n          onChange={props.changed}\n        />\n      );\n      break;\n    case \"select\":\n      inputElement = (\n        <select\n          className={inputElementArray.join(' ')}\n          value={props.value}\n          onChange={props.changed}\n        >\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>\n      );\n      break;\n    default:\n      inputElement = (\n        <input\n          className={inputElementArray.join(' ')}\n          {...props.elementConfig}\n          value={props.value}\n        />\n      );\n  }\n  return (\n    <div className={classes.Input}>\n      <label className={classes.Label}>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n};\nexport default input;\n","import React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axiosOrder';\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\nimport Input from '../../../components/UI/Input/Input';\nimport {connect} from 'react-redux';\n\nclass ContactData extends Component {\n    state = {\n        orderForm:{\n            name:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Your Name'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n\n            },\n            street:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Your Street'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            zipCode:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Your Zip Code'\n                },\n                value:'',\n                validation:{\n                    required:true,\n                    minlenght:5,\n                    maxlenght:5,\n                },\n                valid:false,\n                touched:false\n            },\n            country:{\n                elementType:'input',\n                elementConfig:{\n                    type:'text',\n                    placeholder:'Your Country'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            email:{\n                elementType:'input',\n                elementConfig:{\n                    type:'email',\n                    placeholder:'Your E-Mail'\n                },\n                value:'',\n                validation:{\n                    required:true\n                },\n                valid:false,\n                touched:false\n            },\n            deliveryMethod:{\n                elementType:'select',\n                elementConfig:{\n                   options:[\n                        {value:'fastest',displayValue:'Fastest'},\n                        {value:'cheapest',displayValue:'Cheapest'},\n                    ]\n                },\n                value:'fastest',\n                validation:{\n                    \n                },\n                valid:true,\n                touched:true\n            },\n        },\n        loading: false,\n        formIsValid:false\n    }\n    orderHandler = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true })\n        let formData={}\n            for (const elementIdentifier in this.state.orderForm) {\n                formData[elementIdentifier]=this.state.orderForm[elementIdentifier].value;\n            }\n        const order = {\n            ingredient: this.props.ings,\n            price: this.props.price,\n            orderData:formData\n        }\n\n        //making http request to firebase \n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({ loading: false })\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({ loading: false })\n            });\n    }\n\n    checkValidity=(value,rules)=>{\n        let  isValid=true;\n        if(rules.required){\n            isValid=value.trim() !== '' && isValid\n        }\n\n        if(rules.minlenght){\n            isValid=value.length >= rules.minlenght && isValid\n        }\n        if(rules.maxlenght){\n            isValid=value.length <= rules.maxlenght && isValid\n        }\n        return isValid;\n    }\n    formHandleChange=(event,elementIdentifier)=>{\n        let updatedForm={\n           ...this.state.orderForm\n        }\n        let updatedFormElement={\n            ...updatedForm[elementIdentifier]\n        }\n        updatedFormElement.value=event.target.value;\n        updatedFormElement.touched=true;\n        updatedFormElement.valid=this.checkValidity(updatedFormElement.value,updatedFormElement.validation);\n        updatedForm[elementIdentifier]=updatedFormElement;\n        let  formIsValid=true;\n        for (const elementIdentifier in updatedForm) {\n            formIsValid=updatedForm[elementIdentifier].valid && formIsValid;\n           \n        }\n        this.setState({orderForm:updatedForm,formIsValid:formIsValid})\n\n    }\n    render() {\n        const orderFormArray=[];\n        for (const key in this.state.orderForm) {\n            if (this.state.orderForm.hasOwnProperty(key)) {\n               orderFormArray.push({id:key,config:this.state.orderForm[key]});\n                \n            }\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter Your Contact Data</h4>\n                {\n                    this.state.loading ? <Spinner />\n                        : <form  onSubmit={this.orderHandler}>\n                         {orderFormArray.map(formElement=>(\n                                <Input \n                                key={formElement.id}\n                                elementType={formElement.config.elementType} \n                                elementConfig={formElement.config.elementConfig}\n                                value={formElement.config.value}\n                                changed={(event)=>this.formHandleChange(event,formElement.id)}\n                                invalid={!formElement.config.valid}\n                                shouldValidate={formElement.config.validation}\n                                touched={formElement.config.touched}\n                                />\n                            ))}\n                            <Button disabled={!this.state.formIsValid} btnType=\"Success\">Order</Button>\n                        </form>\n                }\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n        ings:state.ingredient,\n        price:state.burgerPrice\n    }\n}\nexport default connect(mapStateToProps)(ContactData);\n","import React, { Component } from 'react';\nimport CheckOutSummary from '../../components/Order/CheckOutSummary/CheckOutSummary';\nimport ContactData from './ContactData/ContactData';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n class CheckOut extends Component {\n\n     checkOutCancelHandler=()=>{\n         this.props.history.goBack();\n     }\n     checkOutContinueHandler=(event)=>{\n         event.preventDefault();\n        this.props.history.replace(this.props.match.path + '/contact-data');\n     }\n    render() {\n        return (\n            <div>\n                <CheckOutSummary\n                    ingredient={this.props.ings}\n                    checkOutCancel={this.checkOutCancelHandler}\n                    checkOutContinue={this.checkOutContinueHandler}\n                 />\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    component={ContactData}\n                />\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps=state=>{\n    return{\n        ings:state.ingredient\n    }\n}\nexport default connect(mapStateToProps)(CheckOut);\n","import React from 'react';\nimport classes from './Order.module.css';\nimport Logo from '../../components/Logo/Logo';\nconst order = (props) => {\n    let ingredientArray = []\n    for (const ingredientName in props.ingredient) {\n        if (props.ingredient.hasOwnProperty(ingredientName)) {\n            ingredientArray.push({ name: ingredientName, amount: props.ingredient[ingredientName] })\n\n        }\n    }\n    const ingredientOutput=ingredientArray.map(ingredient=>( <span key={ingredient.name}>{ingredient.name} ({ingredient.amount})</span>))\n    return (\n        <ul className={classes.Order}>\n            <li>\n                <strong>Ingredients: </strong>\n               {ingredientOutput}\n            </li>\n            <li><strong>Price:</strong> USD {parseInt(props.price).toFixed(2)}</li>\n            <div className={classes.Logo}>\n                <Logo />\n            </div>\n        </ul>\n    )\n}\nexport default order;\n","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axiosOrder';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\n// import classes from './Orders.module.css'\n\nexport class Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n    componentDidMount() {\n        this.getOrders();\n    }\n\n    getOrders = () => {\n        axios.get('/orders.json')\n            .then(response => {\n                let orders = [];\n                let obj = response.data;\n                for (let odr in obj) {\n                    let order = {\n                        ...obj[odr],\n                        orderId: odr\n                    }\n                    orders.push(order);\n                }\n                this.setState({ orders: orders, loading: false });\n            })\n            .catch(err => { this.setState({ loading: false }); });\n    }\n    render() {\n        let orders = <Spinner />\n\n        if (this.state.orders.length > 0) {\n            orders = this.state.orders.map(order => (<Order key={order.orderId} ingredient={order.ingredient} price={+order.price} />));\n        }\n        return (\n            <div >\n                {orders}\n            </div>\n        )\n    }\n}\n\nexport default withErrorHandler(Orders, axios);\n","import React, { Component } from 'react';\nimport Layout from './containers/Layout/Layout';\nimport BurgerBulder from './containers/BurgerBuilder/BurgerBuilder';\nimport CheckOut from './containers/CheckOut/CheckOut';\nimport { Route, Switch } from 'react-router-dom';\nimport Orders from './containers/Orders/Orders'; \n\nclass App extends Component {\n  render() {\n    return (\n      <div >\n        <Layout>\n          <Switch>\n            <Route path='/orders' component={Orders} />\n            <Route path='/checkout' component={CheckOut} />\n            <Route path='/' component={BurgerBulder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport reducer from './store/reducer';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\nconst store=createStore(reducer);\nconst app=(\n    <Provider store={store}>\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n    </Provider>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}